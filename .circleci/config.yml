# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.5.0
  codecov: codecov/codecov@3.2.2
#  pytest: transportadora-puiatti/pytest@7.1.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-and-test:
#    docker:
#      - image: circleci/python:3.9.6
#    steps:
#      - checkout
#      - python/install-packages:
#          pkg-manager: pipenv
#      - run: pip install --upgrade pip
#      - run: pip install pipenv
#      - run: pipenv install pytest codecov pytest-cov coverage
#      - run: pipenv sync
#      - run: cp contrib/env-sample .env
#      - run: pipenv run curl -Os https://uploader.codecov.io/latest/linux/codecov
#      - run: pipenv run chmod +x codecov
#      - run: pipenv run ./codecov -t $CODECOV_TOKEN
#      - run: pipenv run pytest --cov=pypro
#      - run: pipenv run coverage run -m pytest pypro
#      - run: pipenv run codecov
#      - run: pipenv run coverage xml
#      - codecov/upload:
#          file: coverage.xml
    docker:
      - image: circleci/python:3.9.6
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - run: cp contrib/env-sample .env
      - restore_cache:
          key: deps-{{ checksum "Pipfile.lock" }}
      - python/install-packages:
          pkg-manager: pipenv
      - run: pipenv sync --dev
      - save_cache:
          key: deps-{{ checksum "Pipfile.lock" }}
          paths:
            - "venv"
      - run: pipenv run coverage run -m pytest pypro/.*/tests
#      - run: pipenv run pytest
#      - run: pipenv run curl -Os https://uploader.codecov.io/latest/linux/codecov
#      - run: pipenv run pytest --cov-report xml
#      - run: pipenv run chmod +x codecov
      - run: pipenv run codecov
#      - codecov/upload:
#          file: coverage.xml


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
#  main:
#    jobs:
#      - python/test:
#          args: '--dev'
#          pkg-manager: pipenv
#          test-tool: pytest
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test